{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hitesh\\\\Desktop\\\\Training\\\\todo\\\\src\\\\App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurrentToDoItem = toDoItem => {\n      this.setState({\n        currentToDoItem: toDoItem\n      });\n    };\n\n    this.saveToDoListItem = toDoItem => {\n      this.setState({\n        toDoList: [...this.state.toDoList, toDoItem]\n      });\n    };\n\n    this.crossLine = event => {\n      const element = event.target;\n      element.classList.toggle(\"crossed-line\");\n    };\n\n    this.state = {\n      currentToDoItem: null,\n      toDoList: [],\n      strikeThrough: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"To Do Item: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => this.setCurrentToDoItem(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.saveToDoListItem(this.state.currentToDoItem),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.currentToDoItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"To Do Items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), this.state.toDoList.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.crossLine,\n            children: [item, \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 27\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Hitesh/Desktop/Training/todo/src/App.js"],"names":["React","App","Component","constructor","props","setCurrentToDoItem","toDoItem","setState","currentToDoItem","saveToDoListItem","toDoList","state","crossLine","event","element","target","classList","toggle","strikeThrough","render","value","map","item","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,kBATmB,GASEC,QAAQ,IAAI;AAC7B,WAAKC,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEF;AADP,OAAd;AAGH,KAbkB;;AAAA,SAenBG,gBAfmB,GAeAH,QAAQ,IAAI;AAC3B,WAAKC,QAAL,CAAc;AACVG,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,QAAf,EAAyBJ,QAAzB;AADA,OAAd;AAGH,KAnBkB;;AAAA,SAqBnBM,SArBmB,GAqBPC,KAAK,IAAI;AACjB,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAtB;AACAD,MAAAA,OAAO,CAACE,SAAR,CAAkBC,MAAlB,CAAyB,cAAzB;AACH,KAxBkB;;AAGf,SAAKN,KAAL,GAAa;AACTH,MAAAA,eAAe,EAAE,IADR;AAETE,MAAAA,QAAQ,EAAE,EAFD;AAGTQ,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKH;;AAkBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AACI,QAAA,QAAQ,EAAEN,KAAK,IACX,KAAKR,kBAAL,CAAwBQ,KAAK,CAACE,MAAN,CAAaK,KAArC;AAFR;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AACI,QAAA,OAAO,EAAE,MACL,KAAKX,gBAAL,CAAsB,KAAKE,KAAL,CAAWH,eAAjC,CAFR;AAAA,+BAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI;AAAA,kBAAI,KAAKG,KAAL,CAAWH;AAAf;AAAA;AAAA;AAAA;AAAA,cAfJ,eAiBI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,KAAKG,KAAL,CAAWD,QAAX,CAAoBW,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtC,8BACI;AAAG,YAAA,OAAO,EAAE,KAAKX,SAAjB;AAAA,uBACKU,IADL,EACW,GADX;AAAA,aAAiCC,KAAjC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH,SANA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8BH;;AA1D+B","sourcesContent":["import React from 'react';\nclass App extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          currentToDoItem: null,\n          toDoList: [],\n          strikeThrough: []\n      };\n  }\n  setCurrentToDoItem = toDoItem => {\n      this.setState({\n          currentToDoItem: toDoItem\n      });\n  };\n\n  saveToDoListItem = toDoItem => {\n      this.setState({\n          toDoList: [...this.state.toDoList, toDoItem]\n      });\n  };\n\n  crossLine = event => {\n      const element = event.target;\n      element.classList.toggle(\"crossed-line\");\n  };\n\n  render() {\n      return (\n          <div>\n              <h1>To Do List</h1>\n              <label>To Do Item: </label>\n              <input\n                  onChange={event =>\n                      this.setCurrentToDoItem(event.target.value)\n                  }\n              />\n              <button\n                  onClick={() =>\n                      this.saveToDoListItem(this.state.currentToDoItem)\n                  }\n              >\n                  <p>Add Item</p>\n              </button>\n              <p>{this.state.currentToDoItem}</p>\n\n              <div>\n                  <p>To Do Items</p>\n                  {this.state.toDoList.map((item, index) => {\n                      return (\n                          <p onClick={this.crossLine} key={index}>\n                              {item}{\" \"}\n                          </p>\n                      );\n                  })}\n              </div>\n          </div>\n      );\n  }\n}"]},"metadata":{},"sourceType":"module"}