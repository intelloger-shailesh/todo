{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hitesh\\\\Desktop\\\\Training\\\\todo\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react'; // Bootstrap for react\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // Setting up state\n\n    this.state = {\n      userInput: \"\",\n      list: []\n    };\n  } // Set a user input value\n\n\n  updateInput(value) {\n    this.setState({\n      userInput: value\n    });\n  } // Add item if user input in not empty\n\n\n  addItem() {\n    if (this.state.userInput !== '') {\n      const userInput = {\n        // Add a random id which is used to delete\n        id: Math.random(),\n        // Add a user value to list\n        value: this.state.userInput\n      }; // Update list\n\n      const list = [...this.state.list];\n      list.push(userInput); // reset state\n\n      this.setState({\n        list,\n        userInput: \"\"\n      });\n    }\n  } // Function to delete item from list use id to delete\n\n\n  deleteItem(key) {\n    const list = [...this.state.list]; // Filter values and leave value which we need to delete\n\n    const updateList = list.filter(item => item.id !== key); // Update list in state\n\n    this.setState({\n      list: updateList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontSize: '3rem',\n          fontWeight: 'bolder'\n        },\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 5,\n            offset: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"add item . . . \",\n              size: \"lg\",\n              value: this.state.userInput,\n              onChange: item => this.updateInput(item.target.value),\n              \"aria-label\": \"add something\",\n              \"aria-describedby\": \"basic-addon2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark\",\n                size: \"lg\",\n                onClick: () => this.addItem(),\n                children: \"ADD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 5,\n            offset: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: this.state.list.map(item => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                variant: \"dark\",\n                action: true,\n                onDoubleClick: () => this.deleteItem(item.id),\n                children: item.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Hitesh/Desktop/Training/todo/src/components/App.js"],"names":["React","Component","Container","Row","Col","Button","InputGroup","FormControl","ListGroup","App","constructor","props","state","userInput","list","updateInput","value","setState","addItem","id","Math","random","push","deleteItem","key","updateList","filter","item","render","display","justifyContent","alignItems","fontSize","fontWeight","span","offset","target","map"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n  \r\n// Bootstrap for react\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n  \r\n  \r\nclass App extends Component  {\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    // Setting up state\r\n    this.state = {\r\n      userInput : \"\",\r\n      list:[]\r\n    }\r\n  }\r\n  \r\n  // Set a user input value\r\n  updateInput(value){\r\n    this.setState({\r\n      userInput: value,\r\n    });\r\n  }\r\n  \r\n  // Add item if user input in not empty\r\n  addItem(){\r\n    if(this.state.userInput !== '' ){\r\n      const userInput = {\r\n  \r\n        // Add a random id which is used to delete\r\n        id :  Math.random(),\r\n  \r\n        // Add a user value to list\r\n        value : this.state.userInput\r\n      };\r\n  \r\n      // Update list\r\n      const list = [...this.state.list];\r\n      list.push(userInput);\r\n  \r\n      // reset state\r\n      this.setState({\r\n        list,\r\n        userInput:\"\"\r\n      });\r\n    }\r\n  }\r\n  \r\n  // Function to delete item from list use id to delete\r\n  deleteItem(key){\r\n    const list = [...this.state.list];\r\n  \r\n    // Filter values and leave value which we need to delete\r\n    const updateList = list.filter(item => item.id !== key);\r\n  \r\n    // Update list in state\r\n    this.setState({\r\n      list:updateList,\r\n    });\r\n  \r\n  }\r\n  \r\n  render(){\r\n    return(<Container>\r\n  \r\n          <Row style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  fontSize: '3rem',\r\n                  fontWeight: 'bolder',\r\n                }}\r\n                >TODO LIST\r\n            </Row>\r\n  \r\n           <hr/>\r\n          <Row>\r\n          <Col md={{ span: 5, offset: 4 }}>\r\n  \r\n          <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"add item . . . \"\r\n            size=\"lg\"\r\n            value = {this.state.userInput}\r\n            onChange = {item => this.updateInput(item.target.value)}\r\n            aria-label=\"add something\"\r\n            aria-describedby=\"basic-addon2\"\r\n          />\r\n          <InputGroup.Append>\r\n            <Button\r\n              variant=\"dark\"\r\n              size=\"lg\"\r\n              onClick = {()=>this.addItem()}\r\n              >\r\n              ADD\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n  \r\n     </Col>\r\n   </Row>\r\n   <Row>\r\n     <Col md={{ span: 5, offset: 4 }}>\r\n        <ListGroup>\r\n          {/* map over and print items */}\r\n         {this.state.list.map(item => {return(\r\n  \r\n            <ListGroup.Item variant=\"dark\" action \r\n              onDoubleClick = { () => this.deleteItem(item.id) }>\r\n              {item.value}\r\n            </ListGroup.Item>\r\n  \r\n         )})}\r\n        </ListGroup>\r\n     </Col>\r\n   </Row>\r\n     </Container>\r\n    );\r\n  }\r\n}\r\n  \r\nexport default App;"]},"metadata":{},"sourceType":"module"}